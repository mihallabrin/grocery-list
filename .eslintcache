[{"C:\\projects\\grocery-list\\src\\index.tsx":"1","C:\\projects\\grocery-list\\src\\reportWebVitals.ts":"2","C:\\projects\\grocery-list\\src\\App.tsx":"3","C:\\projects\\grocery-list\\src\\aws-exports.js":"4","C:\\projects\\grocery-list\\src\\grocery-list\\GroceryList.tsx":"5","C:\\projects\\grocery-list\\src\\graphql\\queries.ts":"6","C:\\projects\\grocery-list\\src\\grocery-form\\GroceryForm.tsx":"7","C:\\projects\\grocery-list\\src\\graphql\\mutations.ts":"8","C:\\projects\\grocery-list\\src\\graphql\\subscriptions.ts":"9"},{"size":556,"mtime":1609630858499,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":372,"mtime":1609631347911,"results":"13","hashOfConfig":"11"},{"size":815,"mtime":1609629334206,"results":"14","hashOfConfig":"11"},{"size":1612,"mtime":1609688877806,"results":"15","hashOfConfig":"11"},{"size":685,"mtime":1609629331481,"results":"16","hashOfConfig":"11"},{"size":2368,"mtime":1609692190658,"results":"17","hashOfConfig":"11"},{"size":1030,"mtime":1609629331553,"results":"18","hashOfConfig":"11"},{"size":724,"mtime":1609629331598,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"16d5akw",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"C:\\projects\\grocery-list\\src\\index.tsx",[],["42","43"],"C:\\projects\\grocery-list\\src\\reportWebVitals.ts",[],"C:\\projects\\grocery-list\\src\\App.tsx",[],"C:\\projects\\grocery-list\\src\\aws-exports.js",[],["44","45"],"C:\\projects\\grocery-list\\src\\grocery-list\\GroceryList.tsx",[],"C:\\projects\\grocery-list\\src\\graphql\\queries.ts",[],"C:\\projects\\grocery-list\\src\\grocery-form\\GroceryForm.tsx",["46"],"import { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\nimport { createItem } from '../graphql/mutations';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch'\r\n    }\r\n  }\r\n}));\r\n\r\nconst initialState = {\r\n  name: '',\r\n  note: '',\r\n  location: '',\r\n  cost: 0\r\n};\r\n\r\nconst GroceryForm = () => {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState({ ...initialState });\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const snapshot: any = data;\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    snapshot[name] = value;\r\n    setData(snapshot);\r\n  };\r\n\r\n  async function submitItem(): Promise<void> {\r\n    try {\r\n      await API.graphql(graphqlOperation(createItem, { input: data }));\r\n      setData(initialState);\r\n    } catch (error) {\r\n      console.log('createItem', error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete='off'>\r\n      <TextField\r\n        label='Name'\r\n        name='name'\r\n        value={data.name}\r\n        onChange={(e) =>\r\n          setData((prevState) => {\r\n            return { ...prevState, name: e.target.value };\r\n          })\r\n        }\r\n      />\r\n      <TextField\r\n        label='Note'\r\n        name='note'\r\n        value={data.note}\r\n        onChange={(e) =>\r\n          setData((prevState) => {\r\n            return { ...prevState, note: e.target.value };\r\n          })\r\n        }\r\n      />\r\n      <TextField\r\n        label='Location'\r\n        name='location'\r\n        value={data.location}\r\n        onChange={(e) =>\r\n          setData((prevState) => {\r\n            return { ...prevState, location: e.target.value };\r\n          })\r\n        }\r\n      />\r\n      <TextField\r\n        label='Cost'\r\n        name='cost'\r\n        value={data.cost}\r\n        onChange={(e) =>\r\n          setData((prevState) => {\r\n            return { ...prevState, cost: parseFloat(e.target.value) };\r\n          })\r\n        }\r\n      />\r\n      <Button variant='contained' onClick={submitItem}>\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default GroceryForm;\r\n","C:\\projects\\grocery-list\\src\\graphql\\mutations.ts",[],"C:\\projects\\grocery-list\\src\\graphql\\subscriptions.ts",[],["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":28,"column":9,"nodeType":"55","messageId":"56","endLine":28,"endColumn":21},{"ruleId":"49","replacedBy":"57"},{"ruleId":"51","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'handleChange' is assigned a value but never used.","Identifier","unusedVar",["59"],["60"],"no-global-assign","no-unsafe-negation"]